rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own data
    // Also allow queries for community stats
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      // Allow queries for community stats (user names)
      allow list: if request.auth != null;
    }
    
    // Course data - public read, admin write
    match /courses/{courseId} {
      allow read: if true;
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // Lessons - public read, admin write
    match /lessons/{lessonId} {
      allow read: if true;
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // Lesson releases - public read, admin write
    match /lessonReleases/{releaseId} {
      allow read: if true;
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // User activity - users can read/write their own, admins can read all
    // Also allow queries for community stats
    match /userActivity/{userId} {
      allow read: if request.auth != null && 
        (request.auth.uid == userId || 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true);
      allow write: if request.auth != null && request.auth.uid == userId;
      // Allow queries for community stats (online users)
      allow list: if request.auth != null;
    }
    
    // Enrollments - users can read their own, admins can read all
    // Also allow queries for community stats
    match /enrollments/{enrollmentId} {
      allow read: if request.auth != null && 
        (resource.data.userId == request.auth.uid || 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true);
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
      // Allow queries for community stats (cohort users)
      allow list: if request.auth != null;
    }
    
    // Cohorts - public read, admin write
    match /cohorts/{cohortId} {
      allow read: if true;
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // Lesson progress - users can read/write their own
    // Also allow queries for community stats
    match /lessonProgress/{progressId} {
      allow read, write: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      // Allow queries for community stats (completion tracking)
      allow list: if request.auth != null;
    }
    
    // Questions - users can read public ones, write their own
    // Also allow queries for community stats
    match /questions/{questionId} {
      allow read: if resource.data.isPublic == true || 
        (request.auth != null && resource.data.userId == request.auth.uid);
      allow write: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      // Allow queries for community stats (question counts)
      allow list: if request.auth != null;
    }
    
    // Community stats - public read, admin write
    match /communityStats/{statsId} {
      allow read: if true;
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
  }
} 